// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parameter_types.proto

#ifndef PROTOBUF_INCLUDED_parameter_5ftypes_2eproto
#define PROTOBUF_INCLUDED_parameter_5ftypes_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "radec.pb.h"
#include "scalapb/scalapb.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_parameter_5ftypes_2eproto 

namespace protobuf_parameter_5ftypes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[24];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_parameter_5ftypes_2eproto
namespace csw_protobuf {
class BooleanItems;
class BooleanItemsDefaultTypeInternal;
extern BooleanItemsDefaultTypeInternal _BooleanItems_default_instance_;
class ByteArrayItems;
class ByteArrayItemsDefaultTypeInternal;
extern ByteArrayItemsDefaultTypeInternal _ByteArrayItems_default_instance_;
class ByteItems;
class ByteItemsDefaultTypeInternal;
extern ByteItemsDefaultTypeInternal _ByteItems_default_instance_;
class ByteMatrixItems;
class ByteMatrixItemsDefaultTypeInternal;
extern ByteMatrixItemsDefaultTypeInternal _ByteMatrixItems_default_instance_;
class CharItems;
class CharItemsDefaultTypeInternal;
extern CharItemsDefaultTypeInternal _CharItems_default_instance_;
class ChoiceItems;
class ChoiceItemsDefaultTypeInternal;
extern ChoiceItemsDefaultTypeInternal _ChoiceItems_default_instance_;
class DoubleArrayItems;
class DoubleArrayItemsDefaultTypeInternal;
extern DoubleArrayItemsDefaultTypeInternal _DoubleArrayItems_default_instance_;
class DoubleItems;
class DoubleItemsDefaultTypeInternal;
extern DoubleItemsDefaultTypeInternal _DoubleItems_default_instance_;
class DoubleMatrixItems;
class DoubleMatrixItemsDefaultTypeInternal;
extern DoubleMatrixItemsDefaultTypeInternal _DoubleMatrixItems_default_instance_;
class FloatArrayItems;
class FloatArrayItemsDefaultTypeInternal;
extern FloatArrayItemsDefaultTypeInternal _FloatArrayItems_default_instance_;
class FloatItems;
class FloatItemsDefaultTypeInternal;
extern FloatItemsDefaultTypeInternal _FloatItems_default_instance_;
class FloatMatrixItems;
class FloatMatrixItemsDefaultTypeInternal;
extern FloatMatrixItemsDefaultTypeInternal _FloatMatrixItems_default_instance_;
class InstantItems;
class InstantItemsDefaultTypeInternal;
extern InstantItemsDefaultTypeInternal _InstantItems_default_instance_;
class IntArrayItems;
class IntArrayItemsDefaultTypeInternal;
extern IntArrayItemsDefaultTypeInternal _IntArrayItems_default_instance_;
class IntItems;
class IntItemsDefaultTypeInternal;
extern IntItemsDefaultTypeInternal _IntItems_default_instance_;
class IntMatrixItems;
class IntMatrixItemsDefaultTypeInternal;
extern IntMatrixItemsDefaultTypeInternal _IntMatrixItems_default_instance_;
class LongArrayItems;
class LongArrayItemsDefaultTypeInternal;
extern LongArrayItemsDefaultTypeInternal _LongArrayItems_default_instance_;
class LongItems;
class LongItemsDefaultTypeInternal;
extern LongItemsDefaultTypeInternal _LongItems_default_instance_;
class LongMatrixItems;
class LongMatrixItemsDefaultTypeInternal;
extern LongMatrixItemsDefaultTypeInternal _LongMatrixItems_default_instance_;
class RaDecItems;
class RaDecItemsDefaultTypeInternal;
extern RaDecItemsDefaultTypeInternal _RaDecItems_default_instance_;
class ShortArrayItems;
class ShortArrayItemsDefaultTypeInternal;
extern ShortArrayItemsDefaultTypeInternal _ShortArrayItems_default_instance_;
class ShortItems;
class ShortItemsDefaultTypeInternal;
extern ShortItemsDefaultTypeInternal _ShortItems_default_instance_;
class ShortMatrixItems;
class ShortMatrixItemsDefaultTypeInternal;
extern ShortMatrixItemsDefaultTypeInternal _ShortMatrixItems_default_instance_;
class StringItems;
class StringItemsDefaultTypeInternal;
extern StringItemsDefaultTypeInternal _StringItems_default_instance_;
}  // namespace csw_protobuf
namespace google {
namespace protobuf {
template<> ::csw_protobuf::BooleanItems* Arena::CreateMaybeMessage<::csw_protobuf::BooleanItems>(Arena*);
template<> ::csw_protobuf::ByteArrayItems* Arena::CreateMaybeMessage<::csw_protobuf::ByteArrayItems>(Arena*);
template<> ::csw_protobuf::ByteItems* Arena::CreateMaybeMessage<::csw_protobuf::ByteItems>(Arena*);
template<> ::csw_protobuf::ByteMatrixItems* Arena::CreateMaybeMessage<::csw_protobuf::ByteMatrixItems>(Arena*);
template<> ::csw_protobuf::CharItems* Arena::CreateMaybeMessage<::csw_protobuf::CharItems>(Arena*);
template<> ::csw_protobuf::ChoiceItems* Arena::CreateMaybeMessage<::csw_protobuf::ChoiceItems>(Arena*);
template<> ::csw_protobuf::DoubleArrayItems* Arena::CreateMaybeMessage<::csw_protobuf::DoubleArrayItems>(Arena*);
template<> ::csw_protobuf::DoubleItems* Arena::CreateMaybeMessage<::csw_protobuf::DoubleItems>(Arena*);
template<> ::csw_protobuf::DoubleMatrixItems* Arena::CreateMaybeMessage<::csw_protobuf::DoubleMatrixItems>(Arena*);
template<> ::csw_protobuf::FloatArrayItems* Arena::CreateMaybeMessage<::csw_protobuf::FloatArrayItems>(Arena*);
template<> ::csw_protobuf::FloatItems* Arena::CreateMaybeMessage<::csw_protobuf::FloatItems>(Arena*);
template<> ::csw_protobuf::FloatMatrixItems* Arena::CreateMaybeMessage<::csw_protobuf::FloatMatrixItems>(Arena*);
template<> ::csw_protobuf::InstantItems* Arena::CreateMaybeMessage<::csw_protobuf::InstantItems>(Arena*);
template<> ::csw_protobuf::IntArrayItems* Arena::CreateMaybeMessage<::csw_protobuf::IntArrayItems>(Arena*);
template<> ::csw_protobuf::IntItems* Arena::CreateMaybeMessage<::csw_protobuf::IntItems>(Arena*);
template<> ::csw_protobuf::IntMatrixItems* Arena::CreateMaybeMessage<::csw_protobuf::IntMatrixItems>(Arena*);
template<> ::csw_protobuf::LongArrayItems* Arena::CreateMaybeMessage<::csw_protobuf::LongArrayItems>(Arena*);
template<> ::csw_protobuf::LongItems* Arena::CreateMaybeMessage<::csw_protobuf::LongItems>(Arena*);
template<> ::csw_protobuf::LongMatrixItems* Arena::CreateMaybeMessage<::csw_protobuf::LongMatrixItems>(Arena*);
template<> ::csw_protobuf::RaDecItems* Arena::CreateMaybeMessage<::csw_protobuf::RaDecItems>(Arena*);
template<> ::csw_protobuf::ShortArrayItems* Arena::CreateMaybeMessage<::csw_protobuf::ShortArrayItems>(Arena*);
template<> ::csw_protobuf::ShortItems* Arena::CreateMaybeMessage<::csw_protobuf::ShortItems>(Arena*);
template<> ::csw_protobuf::ShortMatrixItems* Arena::CreateMaybeMessage<::csw_protobuf::ShortMatrixItems>(Arena*);
template<> ::csw_protobuf::StringItems* Arena::CreateMaybeMessage<::csw_protobuf::StringItems>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace csw_protobuf {

// ===================================================================

class StringItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.StringItems) */ {
 public:
  StringItems();
  virtual ~StringItems();

  StringItems(const StringItems& from);

  inline StringItems& operator=(const StringItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringItems(StringItems&& from) noexcept
    : StringItems() {
    *this = ::std::move(from);
  }

  inline StringItems& operator=(StringItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringItems* internal_default_instance() {
    return reinterpret_cast<const StringItems*>(
               &_StringItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StringItems* other);
  friend void swap(StringItems& a, StringItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringItems* New() const final {
    return CreateMaybeMessage<StringItems>(NULL);
  }

  StringItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringItems& from);
  void MergeFrom(const StringItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // @@protoc_insertion_point(class_scope:csw_protobuf.StringItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BooleanItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.BooleanItems) */ {
 public:
  BooleanItems();
  virtual ~BooleanItems();

  BooleanItems(const BooleanItems& from);

  inline BooleanItems& operator=(const BooleanItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BooleanItems(BooleanItems&& from) noexcept
    : BooleanItems() {
    *this = ::std::move(from);
  }

  inline BooleanItems& operator=(BooleanItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BooleanItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BooleanItems* internal_default_instance() {
    return reinterpret_cast<const BooleanItems*>(
               &_BooleanItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(BooleanItems* other);
  friend void swap(BooleanItems& a, BooleanItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BooleanItems* New() const final {
    return CreateMaybeMessage<BooleanItems>(NULL);
  }

  BooleanItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BooleanItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BooleanItems& from);
  void MergeFrom(const BooleanItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BooleanItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  bool values(int index) const;
  void set_values(int index, bool value);
  void add_values(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      values() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:csw_protobuf.BooleanItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > values_;
  mutable int _values_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChoiceItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.ChoiceItems) */ {
 public:
  ChoiceItems();
  virtual ~ChoiceItems();

  ChoiceItems(const ChoiceItems& from);

  inline ChoiceItems& operator=(const ChoiceItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChoiceItems(ChoiceItems&& from) noexcept
    : ChoiceItems() {
    *this = ::std::move(from);
  }

  inline ChoiceItems& operator=(ChoiceItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChoiceItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChoiceItems* internal_default_instance() {
    return reinterpret_cast<const ChoiceItems*>(
               &_ChoiceItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ChoiceItems* other);
  friend void swap(ChoiceItems& a, ChoiceItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChoiceItems* New() const final {
    return CreateMaybeMessage<ChoiceItems>(NULL);
  }

  ChoiceItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChoiceItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChoiceItems& from);
  void MergeFrom(const ChoiceItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChoiceItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // @@protoc_insertion_point(class_scope:csw_protobuf.ChoiceItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RaDecItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.RaDecItems) */ {
 public:
  RaDecItems();
  virtual ~RaDecItems();

  RaDecItems(const RaDecItems& from);

  inline RaDecItems& operator=(const RaDecItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RaDecItems(RaDecItems&& from) noexcept
    : RaDecItems() {
    *this = ::std::move(from);
  }

  inline RaDecItems& operator=(RaDecItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RaDecItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RaDecItems* internal_default_instance() {
    return reinterpret_cast<const RaDecItems*>(
               &_RaDecItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RaDecItems* other);
  friend void swap(RaDecItems& a, RaDecItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RaDecItems* New() const final {
    return CreateMaybeMessage<RaDecItems>(NULL);
  }

  RaDecItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RaDecItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RaDecItems& from);
  void MergeFrom(const RaDecItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RaDecItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.PbRaDec values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::PbRaDec* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::PbRaDec >*
      mutable_values();
  const ::csw_protobuf::PbRaDec& values(int index) const;
  ::csw_protobuf::PbRaDec* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::PbRaDec >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.RaDecItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::PbRaDec > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CharItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.CharItems) */ {
 public:
  CharItems();
  virtual ~CharItems();

  CharItems(const CharItems& from);

  inline CharItems& operator=(const CharItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CharItems(CharItems&& from) noexcept
    : CharItems() {
    *this = ::std::move(from);
  }

  inline CharItems& operator=(CharItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CharItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharItems* internal_default_instance() {
    return reinterpret_cast<const CharItems*>(
               &_CharItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CharItems* other);
  friend void swap(CharItems& a, CharItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CharItems* New() const final {
    return CreateMaybeMessage<CharItems>(NULL);
  }

  CharItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CharItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CharItems& from);
  void MergeFrom(const CharItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string values = 1 [(.scalapb.field) = {
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values() const;
  void set_values(const ::std::string& value);
  #if LANG_CXX11
  void set_values(::std::string&& value);
  #endif
  void set_values(const char* value);
  void set_values(const char* value, size_t size);
  ::std::string* mutable_values();
  ::std::string* release_values();
  void set_allocated_values(::std::string* values);

  // @@protoc_insertion_point(class_scope:csw_protobuf.CharItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstantItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.InstantItems) */ {
 public:
  InstantItems();
  virtual ~InstantItems();

  InstantItems(const InstantItems& from);

  inline InstantItems& operator=(const InstantItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstantItems(InstantItems&& from) noexcept
    : InstantItems() {
    *this = ::std::move(from);
  }

  inline InstantItems& operator=(InstantItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstantItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstantItems* internal_default_instance() {
    return reinterpret_cast<const InstantItems*>(
               &_InstantItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(InstantItems* other);
  friend void swap(InstantItems& a, InstantItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstantItems* New() const final {
    return CreateMaybeMessage<InstantItems>(NULL);
  }

  InstantItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstantItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstantItems& from);
  void MergeFrom(const InstantItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstantItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Timestamp values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::Timestamp* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp >*
      mutable_values();
  const ::google::protobuf::Timestamp& values(int index) const;
  ::google::protobuf::Timestamp* add_values();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.InstantItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ByteItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.ByteItems) */ {
 public:
  ByteItems();
  virtual ~ByteItems();

  ByteItems(const ByteItems& from);

  inline ByteItems& operator=(const ByteItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ByteItems(ByteItems&& from) noexcept
    : ByteItems() {
    *this = ::std::move(from);
  }

  inline ByteItems& operator=(ByteItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ByteItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ByteItems* internal_default_instance() {
    return reinterpret_cast<const ByteItems*>(
               &_ByteItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ByteItems* other);
  friend void swap(ByteItems& a, ByteItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ByteItems* New() const final {
    return CreateMaybeMessage<ByteItems>(NULL);
  }

  ByteItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ByteItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ByteItems& from);
  void MergeFrom(const ByteItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ByteItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes values = 1 [(.scalapb.field) = {
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values() const;
  void set_values(const ::std::string& value);
  #if LANG_CXX11
  void set_values(::std::string&& value);
  #endif
  void set_values(const char* value);
  void set_values(const void* value, size_t size);
  ::std::string* mutable_values();
  ::std::string* release_values();
  void set_allocated_values(::std::string* values);

  // @@protoc_insertion_point(class_scope:csw_protobuf.ByteItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShortItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.ShortItems) */ {
 public:
  ShortItems();
  virtual ~ShortItems();

  ShortItems(const ShortItems& from);

  inline ShortItems& operator=(const ShortItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShortItems(ShortItems&& from) noexcept
    : ShortItems() {
    *this = ::std::move(from);
  }

  inline ShortItems& operator=(ShortItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShortItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShortItems* internal_default_instance() {
    return reinterpret_cast<const ShortItems*>(
               &_ShortItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ShortItems* other);
  friend void swap(ShortItems& a, ShortItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShortItems* New() const final {
    return CreateMaybeMessage<ShortItems>(NULL);
  }

  ShortItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShortItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShortItems& from);
  void MergeFrom(const ShortItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShortItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:csw_protobuf.ShortItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  mutable int _values_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.IntItems) */ {
 public:
  IntItems();
  virtual ~IntItems();

  IntItems(const IntItems& from);

  inline IntItems& operator=(const IntItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntItems(IntItems&& from) noexcept
    : IntItems() {
    *this = ::std::move(from);
  }

  inline IntItems& operator=(IntItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntItems* internal_default_instance() {
    return reinterpret_cast<const IntItems*>(
               &_IntItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(IntItems* other);
  friend void swap(IntItems& a, IntItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntItems* New() const final {
    return CreateMaybeMessage<IntItems>(NULL);
  }

  IntItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntItems& from);
  void MergeFrom(const IntItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:csw_protobuf.IntItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  mutable int _values_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LongItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.LongItems) */ {
 public:
  LongItems();
  virtual ~LongItems();

  LongItems(const LongItems& from);

  inline LongItems& operator=(const LongItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LongItems(LongItems&& from) noexcept
    : LongItems() {
    *this = ::std::move(from);
  }

  inline LongItems& operator=(LongItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LongItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LongItems* internal_default_instance() {
    return reinterpret_cast<const LongItems*>(
               &_LongItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(LongItems* other);
  friend void swap(LongItems& a, LongItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LongItems* New() const final {
    return CreateMaybeMessage<LongItems>(NULL);
  }

  LongItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LongItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LongItems& from);
  void MergeFrom(const LongItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LongItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::protobuf::uint64 values(int index) const;
  void set_values(int index, ::google::protobuf::uint64 value);
  void add_values(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:csw_protobuf.LongItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > values_;
  mutable int _values_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoubleItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.DoubleItems) */ {
 public:
  DoubleItems();
  virtual ~DoubleItems();

  DoubleItems(const DoubleItems& from);

  inline DoubleItems& operator=(const DoubleItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoubleItems(DoubleItems&& from) noexcept
    : DoubleItems() {
    *this = ::std::move(from);
  }

  inline DoubleItems& operator=(DoubleItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleItems* internal_default_instance() {
    return reinterpret_cast<const DoubleItems*>(
               &_DoubleItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(DoubleItems* other);
  friend void swap(DoubleItems& a, DoubleItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleItems* New() const final {
    return CreateMaybeMessage<DoubleItems>(NULL);
  }

  DoubleItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DoubleItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DoubleItems& from);
  void MergeFrom(const DoubleItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField< double >&
      values() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:csw_protobuf.DoubleItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > values_;
  mutable int _values_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.FloatItems) */ {
 public:
  FloatItems();
  virtual ~FloatItems();

  FloatItems(const FloatItems& from);

  inline FloatItems& operator=(const FloatItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatItems(FloatItems&& from) noexcept
    : FloatItems() {
    *this = ::std::move(from);
  }

  inline FloatItems& operator=(FloatItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatItems* internal_default_instance() {
    return reinterpret_cast<const FloatItems*>(
               &_FloatItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(FloatItems* other);
  friend void swap(FloatItems& a, FloatItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatItems* New() const final {
    return CreateMaybeMessage<FloatItems>(NULL);
  }

  FloatItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FloatItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FloatItems& from);
  void MergeFrom(const FloatItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  float values(int index) const;
  void set_values(int index, float value);
  void add_values(float value);
  const ::google::protobuf::RepeatedField< float >&
      values() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:csw_protobuf.FloatItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > values_;
  mutable int _values_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ByteArrayItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.ByteArrayItems) */ {
 public:
  ByteArrayItems();
  virtual ~ByteArrayItems();

  ByteArrayItems(const ByteArrayItems& from);

  inline ByteArrayItems& operator=(const ByteArrayItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ByteArrayItems(ByteArrayItems&& from) noexcept
    : ByteArrayItems() {
    *this = ::std::move(from);
  }

  inline ByteArrayItems& operator=(ByteArrayItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ByteArrayItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ByteArrayItems* internal_default_instance() {
    return reinterpret_cast<const ByteArrayItems*>(
               &_ByteArrayItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ByteArrayItems* other);
  friend void swap(ByteArrayItems& a, ByteArrayItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ByteArrayItems* New() const final {
    return CreateMaybeMessage<ByteArrayItems>(NULL);
  }

  ByteArrayItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ByteArrayItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ByteArrayItems& from);
  void MergeFrom(const ByteArrayItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ByteArrayItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.ByteItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::ByteItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteItems >*
      mutable_values();
  const ::csw_protobuf::ByteItems& values(int index) const;
  ::csw_protobuf::ByteItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.ByteArrayItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShortArrayItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.ShortArrayItems) */ {
 public:
  ShortArrayItems();
  virtual ~ShortArrayItems();

  ShortArrayItems(const ShortArrayItems& from);

  inline ShortArrayItems& operator=(const ShortArrayItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShortArrayItems(ShortArrayItems&& from) noexcept
    : ShortArrayItems() {
    *this = ::std::move(from);
  }

  inline ShortArrayItems& operator=(ShortArrayItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShortArrayItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShortArrayItems* internal_default_instance() {
    return reinterpret_cast<const ShortArrayItems*>(
               &_ShortArrayItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ShortArrayItems* other);
  friend void swap(ShortArrayItems& a, ShortArrayItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShortArrayItems* New() const final {
    return CreateMaybeMessage<ShortArrayItems>(NULL);
  }

  ShortArrayItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShortArrayItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShortArrayItems& from);
  void MergeFrom(const ShortArrayItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShortArrayItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.ShortItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::ShortItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortItems >*
      mutable_values();
  const ::csw_protobuf::ShortItems& values(int index) const;
  ::csw_protobuf::ShortItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.ShortArrayItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntArrayItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.IntArrayItems) */ {
 public:
  IntArrayItems();
  virtual ~IntArrayItems();

  IntArrayItems(const IntArrayItems& from);

  inline IntArrayItems& operator=(const IntArrayItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntArrayItems(IntArrayItems&& from) noexcept
    : IntArrayItems() {
    *this = ::std::move(from);
  }

  inline IntArrayItems& operator=(IntArrayItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntArrayItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntArrayItems* internal_default_instance() {
    return reinterpret_cast<const IntArrayItems*>(
               &_IntArrayItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(IntArrayItems* other);
  friend void swap(IntArrayItems& a, IntArrayItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntArrayItems* New() const final {
    return CreateMaybeMessage<IntArrayItems>(NULL);
  }

  IntArrayItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntArrayItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntArrayItems& from);
  void MergeFrom(const IntArrayItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntArrayItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.IntItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::IntItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntItems >*
      mutable_values();
  const ::csw_protobuf::IntItems& values(int index) const;
  ::csw_protobuf::IntItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.IntArrayItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LongArrayItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.LongArrayItems) */ {
 public:
  LongArrayItems();
  virtual ~LongArrayItems();

  LongArrayItems(const LongArrayItems& from);

  inline LongArrayItems& operator=(const LongArrayItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LongArrayItems(LongArrayItems&& from) noexcept
    : LongArrayItems() {
    *this = ::std::move(from);
  }

  inline LongArrayItems& operator=(LongArrayItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LongArrayItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LongArrayItems* internal_default_instance() {
    return reinterpret_cast<const LongArrayItems*>(
               &_LongArrayItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(LongArrayItems* other);
  friend void swap(LongArrayItems& a, LongArrayItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LongArrayItems* New() const final {
    return CreateMaybeMessage<LongArrayItems>(NULL);
  }

  LongArrayItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LongArrayItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LongArrayItems& from);
  void MergeFrom(const LongArrayItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LongArrayItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.LongItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::LongItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongItems >*
      mutable_values();
  const ::csw_protobuf::LongItems& values(int index) const;
  ::csw_protobuf::LongItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.LongArrayItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatArrayItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.FloatArrayItems) */ {
 public:
  FloatArrayItems();
  virtual ~FloatArrayItems();

  FloatArrayItems(const FloatArrayItems& from);

  inline FloatArrayItems& operator=(const FloatArrayItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatArrayItems(FloatArrayItems&& from) noexcept
    : FloatArrayItems() {
    *this = ::std::move(from);
  }

  inline FloatArrayItems& operator=(FloatArrayItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatArrayItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatArrayItems* internal_default_instance() {
    return reinterpret_cast<const FloatArrayItems*>(
               &_FloatArrayItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(FloatArrayItems* other);
  friend void swap(FloatArrayItems& a, FloatArrayItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatArrayItems* New() const final {
    return CreateMaybeMessage<FloatArrayItems>(NULL);
  }

  FloatArrayItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FloatArrayItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FloatArrayItems& from);
  void MergeFrom(const FloatArrayItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatArrayItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.FloatItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::FloatItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatItems >*
      mutable_values();
  const ::csw_protobuf::FloatItems& values(int index) const;
  ::csw_protobuf::FloatItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.FloatArrayItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoubleArrayItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.DoubleArrayItems) */ {
 public:
  DoubleArrayItems();
  virtual ~DoubleArrayItems();

  DoubleArrayItems(const DoubleArrayItems& from);

  inline DoubleArrayItems& operator=(const DoubleArrayItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoubleArrayItems(DoubleArrayItems&& from) noexcept
    : DoubleArrayItems() {
    *this = ::std::move(from);
  }

  inline DoubleArrayItems& operator=(DoubleArrayItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleArrayItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleArrayItems* internal_default_instance() {
    return reinterpret_cast<const DoubleArrayItems*>(
               &_DoubleArrayItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(DoubleArrayItems* other);
  friend void swap(DoubleArrayItems& a, DoubleArrayItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleArrayItems* New() const final {
    return CreateMaybeMessage<DoubleArrayItems>(NULL);
  }

  DoubleArrayItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DoubleArrayItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DoubleArrayItems& from);
  void MergeFrom(const DoubleArrayItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleArrayItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.DoubleItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::DoubleItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleItems >*
      mutable_values();
  const ::csw_protobuf::DoubleItems& values(int index) const;
  ::csw_protobuf::DoubleItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.DoubleArrayItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ByteMatrixItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.ByteMatrixItems) */ {
 public:
  ByteMatrixItems();
  virtual ~ByteMatrixItems();

  ByteMatrixItems(const ByteMatrixItems& from);

  inline ByteMatrixItems& operator=(const ByteMatrixItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ByteMatrixItems(ByteMatrixItems&& from) noexcept
    : ByteMatrixItems() {
    *this = ::std::move(from);
  }

  inline ByteMatrixItems& operator=(ByteMatrixItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ByteMatrixItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ByteMatrixItems* internal_default_instance() {
    return reinterpret_cast<const ByteMatrixItems*>(
               &_ByteMatrixItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ByteMatrixItems* other);
  friend void swap(ByteMatrixItems& a, ByteMatrixItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ByteMatrixItems* New() const final {
    return CreateMaybeMessage<ByteMatrixItems>(NULL);
  }

  ByteMatrixItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ByteMatrixItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ByteMatrixItems& from);
  void MergeFrom(const ByteMatrixItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ByteMatrixItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.ByteArrayItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::ByteArrayItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteArrayItems >*
      mutable_values();
  const ::csw_protobuf::ByteArrayItems& values(int index) const;
  ::csw_protobuf::ByteArrayItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteArrayItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.ByteMatrixItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteArrayItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShortMatrixItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.ShortMatrixItems) */ {
 public:
  ShortMatrixItems();
  virtual ~ShortMatrixItems();

  ShortMatrixItems(const ShortMatrixItems& from);

  inline ShortMatrixItems& operator=(const ShortMatrixItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShortMatrixItems(ShortMatrixItems&& from) noexcept
    : ShortMatrixItems() {
    *this = ::std::move(from);
  }

  inline ShortMatrixItems& operator=(ShortMatrixItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShortMatrixItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShortMatrixItems* internal_default_instance() {
    return reinterpret_cast<const ShortMatrixItems*>(
               &_ShortMatrixItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(ShortMatrixItems* other);
  friend void swap(ShortMatrixItems& a, ShortMatrixItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShortMatrixItems* New() const final {
    return CreateMaybeMessage<ShortMatrixItems>(NULL);
  }

  ShortMatrixItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShortMatrixItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShortMatrixItems& from);
  void MergeFrom(const ShortMatrixItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShortMatrixItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.ShortArrayItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::ShortArrayItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortArrayItems >*
      mutable_values();
  const ::csw_protobuf::ShortArrayItems& values(int index) const;
  ::csw_protobuf::ShortArrayItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortArrayItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.ShortMatrixItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortArrayItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntMatrixItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.IntMatrixItems) */ {
 public:
  IntMatrixItems();
  virtual ~IntMatrixItems();

  IntMatrixItems(const IntMatrixItems& from);

  inline IntMatrixItems& operator=(const IntMatrixItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntMatrixItems(IntMatrixItems&& from) noexcept
    : IntMatrixItems() {
    *this = ::std::move(from);
  }

  inline IntMatrixItems& operator=(IntMatrixItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntMatrixItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntMatrixItems* internal_default_instance() {
    return reinterpret_cast<const IntMatrixItems*>(
               &_IntMatrixItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(IntMatrixItems* other);
  friend void swap(IntMatrixItems& a, IntMatrixItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntMatrixItems* New() const final {
    return CreateMaybeMessage<IntMatrixItems>(NULL);
  }

  IntMatrixItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntMatrixItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntMatrixItems& from);
  void MergeFrom(const IntMatrixItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntMatrixItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.IntArrayItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::IntArrayItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntArrayItems >*
      mutable_values();
  const ::csw_protobuf::IntArrayItems& values(int index) const;
  ::csw_protobuf::IntArrayItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntArrayItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.IntMatrixItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntArrayItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LongMatrixItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.LongMatrixItems) */ {
 public:
  LongMatrixItems();
  virtual ~LongMatrixItems();

  LongMatrixItems(const LongMatrixItems& from);

  inline LongMatrixItems& operator=(const LongMatrixItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LongMatrixItems(LongMatrixItems&& from) noexcept
    : LongMatrixItems() {
    *this = ::std::move(from);
  }

  inline LongMatrixItems& operator=(LongMatrixItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LongMatrixItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LongMatrixItems* internal_default_instance() {
    return reinterpret_cast<const LongMatrixItems*>(
               &_LongMatrixItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(LongMatrixItems* other);
  friend void swap(LongMatrixItems& a, LongMatrixItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LongMatrixItems* New() const final {
    return CreateMaybeMessage<LongMatrixItems>(NULL);
  }

  LongMatrixItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LongMatrixItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LongMatrixItems& from);
  void MergeFrom(const LongMatrixItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LongMatrixItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.LongArrayItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::LongArrayItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongArrayItems >*
      mutable_values();
  const ::csw_protobuf::LongArrayItems& values(int index) const;
  ::csw_protobuf::LongArrayItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongArrayItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.LongMatrixItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongArrayItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatMatrixItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.FloatMatrixItems) */ {
 public:
  FloatMatrixItems();
  virtual ~FloatMatrixItems();

  FloatMatrixItems(const FloatMatrixItems& from);

  inline FloatMatrixItems& operator=(const FloatMatrixItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatMatrixItems(FloatMatrixItems&& from) noexcept
    : FloatMatrixItems() {
    *this = ::std::move(from);
  }

  inline FloatMatrixItems& operator=(FloatMatrixItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatMatrixItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatMatrixItems* internal_default_instance() {
    return reinterpret_cast<const FloatMatrixItems*>(
               &_FloatMatrixItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(FloatMatrixItems* other);
  friend void swap(FloatMatrixItems& a, FloatMatrixItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatMatrixItems* New() const final {
    return CreateMaybeMessage<FloatMatrixItems>(NULL);
  }

  FloatMatrixItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FloatMatrixItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FloatMatrixItems& from);
  void MergeFrom(const FloatMatrixItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatMatrixItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.FloatArrayItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::FloatArrayItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatArrayItems >*
      mutable_values();
  const ::csw_protobuf::FloatArrayItems& values(int index) const;
  ::csw_protobuf::FloatArrayItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatArrayItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.FloatMatrixItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatArrayItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoubleMatrixItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:csw_protobuf.DoubleMatrixItems) */ {
 public:
  DoubleMatrixItems();
  virtual ~DoubleMatrixItems();

  DoubleMatrixItems(const DoubleMatrixItems& from);

  inline DoubleMatrixItems& operator=(const DoubleMatrixItems& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoubleMatrixItems(DoubleMatrixItems&& from) noexcept
    : DoubleMatrixItems() {
    *this = ::std::move(from);
  }

  inline DoubleMatrixItems& operator=(DoubleMatrixItems&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleMatrixItems& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleMatrixItems* internal_default_instance() {
    return reinterpret_cast<const DoubleMatrixItems*>(
               &_DoubleMatrixItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(DoubleMatrixItems* other);
  friend void swap(DoubleMatrixItems& a, DoubleMatrixItems& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleMatrixItems* New() const final {
    return CreateMaybeMessage<DoubleMatrixItems>(NULL);
  }

  DoubleMatrixItems* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DoubleMatrixItems>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DoubleMatrixItems& from);
  void MergeFrom(const DoubleMatrixItems& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleMatrixItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .csw_protobuf.DoubleArrayItems values = 1 [(.scalapb.field) = {
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::csw_protobuf::DoubleArrayItems* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleArrayItems >*
      mutable_values();
  const ::csw_protobuf::DoubleArrayItems& values(int index) const;
  ::csw_protobuf::DoubleArrayItems* add_values();
  const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleArrayItems >&
      values() const;

  // @@protoc_insertion_point(class_scope:csw_protobuf.DoubleMatrixItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleArrayItems > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_parameter_5ftypes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StringItems

// repeated string values = 1;
inline int StringItems::values_size() const {
  return values_.size();
}
inline void StringItems::clear_values() {
  values_.Clear();
}
inline const ::std::string& StringItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.StringItems.values)
  return values_.Get(index);
}
inline ::std::string* StringItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.StringItems.values)
  return values_.Mutable(index);
}
inline void StringItems::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:csw_protobuf.StringItems.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringItems::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:csw_protobuf.StringItems.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringItems::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:csw_protobuf.StringItems.values)
}
inline void StringItems::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:csw_protobuf.StringItems.values)
}
inline ::std::string* StringItems::add_values() {
  // @@protoc_insertion_point(field_add_mutable:csw_protobuf.StringItems.values)
  return values_.Add();
}
inline void StringItems::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:csw_protobuf.StringItems.values)
}
#if LANG_CXX11
inline void StringItems::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:csw_protobuf.StringItems.values)
}
#endif
inline void StringItems::add_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:csw_protobuf.StringItems.values)
}
inline void StringItems::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:csw_protobuf.StringItems.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.StringItems.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.StringItems.values)
  return &values_;
}

// -------------------------------------------------------------------

// BooleanItems

// repeated bool values = 1;
inline int BooleanItems::values_size() const {
  return values_.size();
}
inline void BooleanItems::clear_values() {
  values_.Clear();
}
inline bool BooleanItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.BooleanItems.values)
  return values_.Get(index);
}
inline void BooleanItems::set_values(int index, bool value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:csw_protobuf.BooleanItems.values)
}
inline void BooleanItems::add_values(bool value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:csw_protobuf.BooleanItems.values)
}
inline const ::google::protobuf::RepeatedField< bool >&
BooleanItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.BooleanItems.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< bool >*
BooleanItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.BooleanItems.values)
  return &values_;
}

// -------------------------------------------------------------------

// ChoiceItems

// repeated string values = 1 [(.scalapb.field) = {
inline int ChoiceItems::values_size() const {
  return values_.size();
}
inline void ChoiceItems::clear_values() {
  values_.Clear();
}
inline const ::std::string& ChoiceItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.ChoiceItems.values)
  return values_.Get(index);
}
inline ::std::string* ChoiceItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.ChoiceItems.values)
  return values_.Mutable(index);
}
inline void ChoiceItems::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:csw_protobuf.ChoiceItems.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ChoiceItems::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:csw_protobuf.ChoiceItems.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ChoiceItems::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:csw_protobuf.ChoiceItems.values)
}
inline void ChoiceItems::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:csw_protobuf.ChoiceItems.values)
}
inline ::std::string* ChoiceItems::add_values() {
  // @@protoc_insertion_point(field_add_mutable:csw_protobuf.ChoiceItems.values)
  return values_.Add();
}
inline void ChoiceItems::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:csw_protobuf.ChoiceItems.values)
}
#if LANG_CXX11
inline void ChoiceItems::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:csw_protobuf.ChoiceItems.values)
}
#endif
inline void ChoiceItems::add_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:csw_protobuf.ChoiceItems.values)
}
inline void ChoiceItems::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:csw_protobuf.ChoiceItems.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ChoiceItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.ChoiceItems.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ChoiceItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.ChoiceItems.values)
  return &values_;
}

// -------------------------------------------------------------------

// RaDecItems

// repeated .csw_protobuf.PbRaDec values = 1 [(.scalapb.field) = {
inline int RaDecItems::values_size() const {
  return values_.size();
}
inline ::csw_protobuf::PbRaDec* RaDecItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.RaDecItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::PbRaDec >*
RaDecItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.RaDecItems.values)
  return &values_;
}
inline const ::csw_protobuf::PbRaDec& RaDecItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.RaDecItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::PbRaDec* RaDecItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.RaDecItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::PbRaDec >&
RaDecItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.RaDecItems.values)
  return values_;
}

// -------------------------------------------------------------------

// CharItems

// string values = 1 [(.scalapb.field) = {
inline void CharItems::clear_values() {
  values_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharItems::values() const {
  // @@protoc_insertion_point(field_get:csw_protobuf.CharItems.values)
  return values_.GetNoArena();
}
inline void CharItems::set_values(const ::std::string& value) {
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:csw_protobuf.CharItems.values)
}
#if LANG_CXX11
inline void CharItems::set_values(::std::string&& value) {
  
  values_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:csw_protobuf.CharItems.values)
}
#endif
inline void CharItems::set_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:csw_protobuf.CharItems.values)
}
inline void CharItems::set_values(const char* value, size_t size) {
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:csw_protobuf.CharItems.values)
}
inline ::std::string* CharItems::mutable_values() {
  
  // @@protoc_insertion_point(field_mutable:csw_protobuf.CharItems.values)
  return values_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharItems::release_values() {
  // @@protoc_insertion_point(field_release:csw_protobuf.CharItems.values)
  
  return values_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharItems::set_allocated_values(::std::string* values) {
  if (values != NULL) {
    
  } else {
    
  }
  values_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), values);
  // @@protoc_insertion_point(field_set_allocated:csw_protobuf.CharItems.values)
}

// -------------------------------------------------------------------

// InstantItems

// repeated .google.protobuf.Timestamp values = 1 [(.scalapb.field) = {
inline int InstantItems::values_size() const {
  return values_.size();
}
inline ::google::protobuf::Timestamp* InstantItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.InstantItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp >*
InstantItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.InstantItems.values)
  return &values_;
}
inline const ::google::protobuf::Timestamp& InstantItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.InstantItems.values)
  return values_.Get(index);
}
inline ::google::protobuf::Timestamp* InstantItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.InstantItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Timestamp >&
InstantItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.InstantItems.values)
  return values_;
}

// -------------------------------------------------------------------

// ByteItems

// bytes values = 1 [(.scalapb.field) = {
inline void ByteItems::clear_values() {
  values_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ByteItems::values() const {
  // @@protoc_insertion_point(field_get:csw_protobuf.ByteItems.values)
  return values_.GetNoArena();
}
inline void ByteItems::set_values(const ::std::string& value) {
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:csw_protobuf.ByteItems.values)
}
#if LANG_CXX11
inline void ByteItems::set_values(::std::string&& value) {
  
  values_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:csw_protobuf.ByteItems.values)
}
#endif
inline void ByteItems::set_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:csw_protobuf.ByteItems.values)
}
inline void ByteItems::set_values(const void* value, size_t size) {
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:csw_protobuf.ByteItems.values)
}
inline ::std::string* ByteItems::mutable_values() {
  
  // @@protoc_insertion_point(field_mutable:csw_protobuf.ByteItems.values)
  return values_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ByteItems::release_values() {
  // @@protoc_insertion_point(field_release:csw_protobuf.ByteItems.values)
  
  return values_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ByteItems::set_allocated_values(::std::string* values) {
  if (values != NULL) {
    
  } else {
    
  }
  values_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), values);
  // @@protoc_insertion_point(field_set_allocated:csw_protobuf.ByteItems.values)
}

// -------------------------------------------------------------------

// ShortItems

// repeated int32 values = 1 [(.scalapb.field) = {
inline int ShortItems::values_size() const {
  return values_.size();
}
inline void ShortItems::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 ShortItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.ShortItems.values)
  return values_.Get(index);
}
inline void ShortItems::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:csw_protobuf.ShortItems.values)
}
inline void ShortItems::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:csw_protobuf.ShortItems.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ShortItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.ShortItems.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ShortItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.ShortItems.values)
  return &values_;
}

// -------------------------------------------------------------------

// IntItems

// repeated int32 values = 1;
inline int IntItems::values_size() const {
  return values_.size();
}
inline void IntItems::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::int32 IntItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.IntItems.values)
  return values_.Get(index);
}
inline void IntItems::set_values(int index, ::google::protobuf::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:csw_protobuf.IntItems.values)
}
inline void IntItems::add_values(::google::protobuf::int32 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:csw_protobuf.IntItems.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IntItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.IntItems.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IntItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.IntItems.values)
  return &values_;
}

// -------------------------------------------------------------------

// LongItems

// repeated fixed64 values = 1;
inline int LongItems::values_size() const {
  return values_.size();
}
inline void LongItems::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint64 LongItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.LongItems.values)
  return values_.Get(index);
}
inline void LongItems::set_values(int index, ::google::protobuf::uint64 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:csw_protobuf.LongItems.values)
}
inline void LongItems::add_values(::google::protobuf::uint64 value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:csw_protobuf.LongItems.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LongItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.LongItems.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LongItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.LongItems.values)
  return &values_;
}

// -------------------------------------------------------------------

// DoubleItems

// repeated double values = 1;
inline int DoubleItems::values_size() const {
  return values_.size();
}
inline void DoubleItems::clear_values() {
  values_.Clear();
}
inline double DoubleItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.DoubleItems.values)
  return values_.Get(index);
}
inline void DoubleItems::set_values(int index, double value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:csw_protobuf.DoubleItems.values)
}
inline void DoubleItems::add_values(double value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:csw_protobuf.DoubleItems.values)
}
inline const ::google::protobuf::RepeatedField< double >&
DoubleItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.DoubleItems.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< double >*
DoubleItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.DoubleItems.values)
  return &values_;
}

// -------------------------------------------------------------------

// FloatItems

// repeated float values = 1;
inline int FloatItems::values_size() const {
  return values_.size();
}
inline void FloatItems::clear_values() {
  values_.Clear();
}
inline float FloatItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.FloatItems.values)
  return values_.Get(index);
}
inline void FloatItems::set_values(int index, float value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:csw_protobuf.FloatItems.values)
}
inline void FloatItems::add_values(float value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:csw_protobuf.FloatItems.values)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.FloatItems.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.FloatItems.values)
  return &values_;
}

// -------------------------------------------------------------------

// ByteArrayItems

// repeated .csw_protobuf.ByteItems values = 1 [(.scalapb.field) = {
inline int ByteArrayItems::values_size() const {
  return values_.size();
}
inline void ByteArrayItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::ByteItems* ByteArrayItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.ByteArrayItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteItems >*
ByteArrayItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.ByteArrayItems.values)
  return &values_;
}
inline const ::csw_protobuf::ByteItems& ByteArrayItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.ByteArrayItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::ByteItems* ByteArrayItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.ByteArrayItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteItems >&
ByteArrayItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.ByteArrayItems.values)
  return values_;
}

// -------------------------------------------------------------------

// ShortArrayItems

// repeated .csw_protobuf.ShortItems values = 1 [(.scalapb.field) = {
inline int ShortArrayItems::values_size() const {
  return values_.size();
}
inline void ShortArrayItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::ShortItems* ShortArrayItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.ShortArrayItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortItems >*
ShortArrayItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.ShortArrayItems.values)
  return &values_;
}
inline const ::csw_protobuf::ShortItems& ShortArrayItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.ShortArrayItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::ShortItems* ShortArrayItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.ShortArrayItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortItems >&
ShortArrayItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.ShortArrayItems.values)
  return values_;
}

// -------------------------------------------------------------------

// IntArrayItems

// repeated .csw_protobuf.IntItems values = 1 [(.scalapb.field) = {
inline int IntArrayItems::values_size() const {
  return values_.size();
}
inline void IntArrayItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::IntItems* IntArrayItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.IntArrayItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntItems >*
IntArrayItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.IntArrayItems.values)
  return &values_;
}
inline const ::csw_protobuf::IntItems& IntArrayItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.IntArrayItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::IntItems* IntArrayItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.IntArrayItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntItems >&
IntArrayItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.IntArrayItems.values)
  return values_;
}

// -------------------------------------------------------------------

// LongArrayItems

// repeated .csw_protobuf.LongItems values = 1 [(.scalapb.field) = {
inline int LongArrayItems::values_size() const {
  return values_.size();
}
inline void LongArrayItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::LongItems* LongArrayItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.LongArrayItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongItems >*
LongArrayItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.LongArrayItems.values)
  return &values_;
}
inline const ::csw_protobuf::LongItems& LongArrayItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.LongArrayItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::LongItems* LongArrayItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.LongArrayItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongItems >&
LongArrayItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.LongArrayItems.values)
  return values_;
}

// -------------------------------------------------------------------

// FloatArrayItems

// repeated .csw_protobuf.FloatItems values = 1 [(.scalapb.field) = {
inline int FloatArrayItems::values_size() const {
  return values_.size();
}
inline void FloatArrayItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::FloatItems* FloatArrayItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.FloatArrayItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatItems >*
FloatArrayItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.FloatArrayItems.values)
  return &values_;
}
inline const ::csw_protobuf::FloatItems& FloatArrayItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.FloatArrayItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::FloatItems* FloatArrayItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.FloatArrayItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatItems >&
FloatArrayItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.FloatArrayItems.values)
  return values_;
}

// -------------------------------------------------------------------

// DoubleArrayItems

// repeated .csw_protobuf.DoubleItems values = 1 [(.scalapb.field) = {
inline int DoubleArrayItems::values_size() const {
  return values_.size();
}
inline void DoubleArrayItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::DoubleItems* DoubleArrayItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.DoubleArrayItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleItems >*
DoubleArrayItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.DoubleArrayItems.values)
  return &values_;
}
inline const ::csw_protobuf::DoubleItems& DoubleArrayItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.DoubleArrayItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::DoubleItems* DoubleArrayItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.DoubleArrayItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleItems >&
DoubleArrayItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.DoubleArrayItems.values)
  return values_;
}

// -------------------------------------------------------------------

// ByteMatrixItems

// repeated .csw_protobuf.ByteArrayItems values = 1 [(.scalapb.field) = {
inline int ByteMatrixItems::values_size() const {
  return values_.size();
}
inline void ByteMatrixItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::ByteArrayItems* ByteMatrixItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.ByteMatrixItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteArrayItems >*
ByteMatrixItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.ByteMatrixItems.values)
  return &values_;
}
inline const ::csw_protobuf::ByteArrayItems& ByteMatrixItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.ByteMatrixItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::ByteArrayItems* ByteMatrixItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.ByteMatrixItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ByteArrayItems >&
ByteMatrixItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.ByteMatrixItems.values)
  return values_;
}

// -------------------------------------------------------------------

// ShortMatrixItems

// repeated .csw_protobuf.ShortArrayItems values = 1 [(.scalapb.field) = {
inline int ShortMatrixItems::values_size() const {
  return values_.size();
}
inline void ShortMatrixItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::ShortArrayItems* ShortMatrixItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.ShortMatrixItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortArrayItems >*
ShortMatrixItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.ShortMatrixItems.values)
  return &values_;
}
inline const ::csw_protobuf::ShortArrayItems& ShortMatrixItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.ShortMatrixItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::ShortArrayItems* ShortMatrixItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.ShortMatrixItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::ShortArrayItems >&
ShortMatrixItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.ShortMatrixItems.values)
  return values_;
}

// -------------------------------------------------------------------

// IntMatrixItems

// repeated .csw_protobuf.IntArrayItems values = 1 [(.scalapb.field) = {
inline int IntMatrixItems::values_size() const {
  return values_.size();
}
inline void IntMatrixItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::IntArrayItems* IntMatrixItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.IntMatrixItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntArrayItems >*
IntMatrixItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.IntMatrixItems.values)
  return &values_;
}
inline const ::csw_protobuf::IntArrayItems& IntMatrixItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.IntMatrixItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::IntArrayItems* IntMatrixItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.IntMatrixItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::IntArrayItems >&
IntMatrixItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.IntMatrixItems.values)
  return values_;
}

// -------------------------------------------------------------------

// LongMatrixItems

// repeated .csw_protobuf.LongArrayItems values = 1 [(.scalapb.field) = {
inline int LongMatrixItems::values_size() const {
  return values_.size();
}
inline void LongMatrixItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::LongArrayItems* LongMatrixItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.LongMatrixItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongArrayItems >*
LongMatrixItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.LongMatrixItems.values)
  return &values_;
}
inline const ::csw_protobuf::LongArrayItems& LongMatrixItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.LongMatrixItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::LongArrayItems* LongMatrixItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.LongMatrixItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::LongArrayItems >&
LongMatrixItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.LongMatrixItems.values)
  return values_;
}

// -------------------------------------------------------------------

// FloatMatrixItems

// repeated .csw_protobuf.FloatArrayItems values = 1 [(.scalapb.field) = {
inline int FloatMatrixItems::values_size() const {
  return values_.size();
}
inline void FloatMatrixItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::FloatArrayItems* FloatMatrixItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.FloatMatrixItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatArrayItems >*
FloatMatrixItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.FloatMatrixItems.values)
  return &values_;
}
inline const ::csw_protobuf::FloatArrayItems& FloatMatrixItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.FloatMatrixItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::FloatArrayItems* FloatMatrixItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.FloatMatrixItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::FloatArrayItems >&
FloatMatrixItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.FloatMatrixItems.values)
  return values_;
}

// -------------------------------------------------------------------

// DoubleMatrixItems

// repeated .csw_protobuf.DoubleArrayItems values = 1 [(.scalapb.field) = {
inline int DoubleMatrixItems::values_size() const {
  return values_.size();
}
inline void DoubleMatrixItems::clear_values() {
  values_.Clear();
}
inline ::csw_protobuf::DoubleArrayItems* DoubleMatrixItems::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:csw_protobuf.DoubleMatrixItems.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleArrayItems >*
DoubleMatrixItems::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:csw_protobuf.DoubleMatrixItems.values)
  return &values_;
}
inline const ::csw_protobuf::DoubleArrayItems& DoubleMatrixItems::values(int index) const {
  // @@protoc_insertion_point(field_get:csw_protobuf.DoubleMatrixItems.values)
  return values_.Get(index);
}
inline ::csw_protobuf::DoubleArrayItems* DoubleMatrixItems::add_values() {
  // @@protoc_insertion_point(field_add:csw_protobuf.DoubleMatrixItems.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::csw_protobuf::DoubleArrayItems >&
DoubleMatrixItems::values() const {
  // @@protoc_insertion_point(field_list:csw_protobuf.DoubleMatrixItems.values)
  return values_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace csw_protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_parameter_5ftypes_2eproto
